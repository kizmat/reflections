What happens when you initialize a repository? Why do you need to do it?

	git configures the current directory and all subs to be tracked. This also creates
	a .git file. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is a temp. commit basket, in it I define which sets of files will be 
	part of the next "single" commit.

How can you use the staging area to make sure you have one commit per logical
change?

	I can pre-check the staging area for changes, prior to making the commit.
	This id dont with the git diff command, which compare only wd file with 
	the staging file. After a review, I can finally make the commit.

	I can also review the diff between the staging file and the repo file by 
	using git diff --staged which compares the staging file to the repo

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When I want to test a different feature, and Im not sure it will make it 
	into the build. Or if I wanted to add a different language. This would be 
	the massive undo button.

How do the diagrams help you visualize the branch structure?
	
	Duh! The diagram shows the branch structure 

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
