When would you want to use a remote repository rather than keeping all your work
local?

    When I wish to share my changes with my collaborators, ideally on a daily basis.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Save bandwidth? No idea to be honest.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

	Fork clones a project on github to my profile on github, giving credit 
	to the original project.

	A clone is just a pull from a repository, the repo could be remote or local

	A branch is simply a new branch within the same repository, allowing to test
	features etc..

What is the benefit of having a copy of the last known state of the remote
stored locally?

    If I'm behind the remote, I could make the push merge less complicated if I 
	merged locally first. Then made the push. Fetch would only give me the 
	remote state, and not execute the actual merge.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

	Different people could work on the codebase, and make pull requests to
	update the remote master branch, or any other branch for that matter.

	For remote collaboration this is awesome. Even if I were to work with 
	people in the same office, it would be much easier to use a git server
	to maintain code.	

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
